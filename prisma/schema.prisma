generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  slackId               String        @id
  token                 String
  currency              Float         @default(0.0)
  hcb_email             String?
  reigions_for_shipping Reigions?
  slack_id              String
  slack_name            String
  address               String?
  address_line_1        String?
  address_line_2        String?
  address_city          String?
  address_state         String?
  address_postal_code   String?
  address_country       String?
  HeidiEscrow           HeidiEscrow[]
  Purchase              Purchase[]
  Ship                  Ship[]

  @@unique([slackId, slack_name])
}

model Ship {
  id                              String        @id @default(cuid())
  Name                            String
  Description                     String
  Reviewer                        String?
  grant_amount                    Float         @default(30.0)
  requested_grant_amount          Float
  status                          StatusString  @default(DRAFT)
  approved_for_grant              Boolean       @default(false)
  approved_for_hq                 Boolean       @default(false)
  approved_for_digital            Boolean       @default(false)
  is_under_some_review_rn         Boolean       @default(false)
  automation_approved_for_grant   Boolean       @default(false)
  automation_approved_for_hq      Boolean       @default(false)
  automation_approved_for_digital Boolean       @default(false)
  github_url                      String
  demo_url                        String?
  cover_image_url                 String        @default("https://hc-cdn.hel1.your-objectstorage.com/s/v3/113006acabca1ebbaadb96594f5905aa250dccca_9b1f3503271d6474.png")
  readme_url                      String
  userId                          String
  featured                        Boolean       @default(false)
  reviewer_feedback               String?
  slack_user_name                 String
  rejected_for_something          String?
  total_time_in_seconds           String?       @default("0")
  bill_of_materials               String? // this is optional because of prisma migration system
  HeidiEscrow                     HeidiEscrow[]
  Purchase                        Purchase[]
  user                            User          @relation(fields: [userId, slack_user_name], references: [slackId, slack_name])
}

model Purchase {
  id          String        @id @default(cuid())
  shipId      String
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  buyerId     String
  sellerId    String
  HeidiEscrow HeidiEscrow[]
  seller      User          @relation(fields: [sellerId], references: [slackId])
  ship        Ship          @relation(fields: [shipId], references: [id])
}

model HeidiEscrow {
  id          String   @id @default(cuid())
  purchaseId  String
  userSlackId String?
  shipId      String?
  purchase    Purchase @relation(fields: [purchaseId], references: [id])
  Ship        Ship?    @relation(fields: [shipId], references: [id])
  User        User?    @relation(fields: [userSlackId], references: [slackId])
}

model Time {
  id                    String     @id @default(cuid())
  shipId                String
  video_link            String?
  status                TimeStatus @default(PENDING)
  total_time_in_seconds Float?
  createdAt             DateTime   @default(now())
  updatedAt             DateTime   @updatedAt
  userId                String
  memo                  String?
  wormhole_link         String?
  pausedAt              DateTime?
  pauseHistory          Json?      @default("[]")
}

enum TimeStatus {
  PENDING
  APPROVED
  REJECTED
}

enum Reigions {
  EVERYWHERE
  US
  AU
  IN
  EU
  CA
  UK
  ASIA
}

enum StatusString {
  DRAFT
  UNDER_HQ_DIGITAL_REVIEW
  UNDER_HQ_GRANT_REVIEW
  UNDER_HQ_REVIEW
  SHIPPED
}
